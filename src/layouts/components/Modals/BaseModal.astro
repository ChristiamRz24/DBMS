---
interface Props {
  id: string;
  type: string;
  title: string;
  onSubmit?: () => void;
}

const { id, type, title, onSubmit } = Astro.props;
---

<dialog id={id} class="modal modal-bottom sm:modal-middle">
  <div class="modal-box">
    <h3 class="font-bold text-lg">{title}</h3>
    <div class="modal-action w-full mt-0">
      <button
        type="button"
        onclick=`${id}.close()`
        class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2"
      >
        âœ• <!-- Close icon -->
      </button>
      <form
        method="dialog"
        id={`Form-${id}`}
        class="flex flex-col gap-3 w-full"
      >
        <!-- Form fields -->
        <slot />
        <!-- Form actions -->
        <div class="ms-auto">
          <button type="button" onclick=`${id}.close()` class="btn btn-outline">
            Cancelar
          </button>
          <button type="submit" class="btn btn-accent">
            {type}
          </button>
        </div>
      </form>
    </div>
  </div>
</dialog>

<script is:inline define:vars={{ id, onSubmit }}>
  const dialog = window.document.getElementById(id);
  const form = window.document.getElementById(`Form-${id}`);

  if (!dialog) throw new Error(`Dialog is not found`);
  if (!form) throw new Error(`Form is not found`);

  form.addEventListener("submit", handleSubmit);

  function handleSubmit(event) {
    event.preventDefault();
    console.log("Form submitted");

    // Call the passed function
    if (onSubmit) () => onSubmit();

    dialog.close();
  }
</script>
